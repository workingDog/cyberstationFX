package controllers

import com.jfoenix.controls.{JFXButton, JFXListView, JFXSpinner}

import scalafx.beans.property.BooleanProperty
import scalafx.collections.ObservableBuffer
import scalafx.scene.control.{Button, ListCell, ListView}
import scalafx.scene.input.MouseEvent
import scalafxml.core.macros.{nested, sfxml}
import scalafx.Includes._
import scalafx.scene.layout.AnchorPane


trait StixViewControllerInterface {
  def init(): Unit
}

@sfxml
class StixViewController(contentPane: AnchorPane, stixBar: ListView[String]) extends StixViewControllerInterface {

  init()

  override def init() {
    println("---> in StixViewController init")
  }

  val data = ObservableBuffer[String](
    "Bundle", "Attack Pattern", "Relationship", "Indicator",
    "Sighting", "Malware", "Campaign", "Course of Action",
    "Identity", "Intrusion Set", "Observed Data", "Report",
    "Threat Actor", "Tool", "Vulnerability")

  stixBar.items = data

  stixBar.cellFactory = { _ =>
    new ListCell[String] {
      item.onChange { (_, _, newValue) =>
        graphic = new JFXButton(item.value) {
          setOnMouseClicked((_: MouseEvent) => {
            item.value match {
              case "Bundle" => println("--> button clicked on Bundle")


              case _ => println("--> button clicked=" + item.value)
            }

          })
        }
      }
    }
  }


}


    //  new Alert(AlertType.Information, msg).showAndWait()

//      val dialogStage = new Stage {
//        outer =>
//        scene = new Scene {
//          root = new BorderPane {
//            padding = Insets(25)
//            center = new Label(msg)
//            bottom = new Button {
//              alignmentInParent = Pos.Center
//              text = "Ok"
//              onAction = handle { outer.close() }
//            }
//          }
//        }
//      }
//      dialogStage.showAndWait()
//      Platform.exit()